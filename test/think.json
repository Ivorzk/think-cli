{"adapter.development.js.file":"const path = require('path');\nconst thinkLogger = require('think-logger3');\nconst ConsoleLogger = thinkLogger.Console;\nconst FileLogger = thinkLogger.File;\nconst DateFileLogger = thinkLogger.DateFile;\n\n/**\n * logger\n */\nexports.logger = {\n  type: 'console',\n  console: {\n    handle: ConsoleLogger\n  },\n  file: {\n    handle: FileLogger\n  },\n  datefile: {\n    handle: DateFileLogger\n  }\n}","adapter.js.file":"const nunjucks = require('think-view-nunjucks');\nconst path = require('path');\nconst cookieSession = require('think-session-cookie');\nconst fileSession = require('think-session-file');\n\n//view adapter config\nexports.view = {\n  type: 'nunjucks',\n  common: {\n    viewPath: path.join(think.ROOT_PATH, 'view'),\n    sep: '_',\n    extname: '.html'\n  },\n  nunjucks: {\n    handle: nunjucks\n  }\n}\n\n//session adapter config\nexports.session = {\n  type: 'file',\n  common: {\n    cookie: {\n      name: 'test',\n      keys: ['werwer', 'werwer'],\n      signed: true\n    }\n  },\n  cookie: {\n    handle: cookieSession,\n    cookie: {\n      maxAge: 1009990 * 1000,\n      keys: ['welefen', 'suredy'],\n      encrypt: true\n    }\n  },\n  file: {\n    handle: fileSession,\n    sessionPath: path.join(think.ROOT_PATH, 'runtime/session')\n  }\n}\n\n\n","adapter.production.js.file":"const path = require('path');\nconst thinkLogger = require('think-logger3');\nconst ConsoleLogger = thinkLogger.Console;\nconst FileLogger = thinkLogger.File;\nconst DateFileLogger = thinkLogger.DateFile;\n\n/**\n * logger\n */\nexports.logger = {\n  type: 'console',\n  console: {\n    handle: ConsoleLogger\n  },\n  file: {\n    handle: FileLogger\n  },\n  datefile: {\n    handle: DateFileLogger\n  }\n}","config.development.js.file":"","config.js.file":"/**\n * default config\n */\nmodule.exports = {\n  port: 8360, //server port\n  host: '0.0.0.0', //server host\n  workers: 1, //server workers num, if value is 0 then get cpus num\n  startServerTimeout: 3000, //before start server time\n  reloadSignal: 'SIGUSR2', //reload process signal\n  onUnhandledRejection: '', //unhandledRejection handle\n  onUncaughtException: '', //uncaughtException handle\n  processKillTimeout: 10 * 1000 //process kill timeout\n}","config.production.js.file":"/**\n * default config\n */\nmodule.exports = {\n  port: 8360, //server port\n  host: '0.0.0.0', //server host\n  workers: 1, //server workers num, if value is 0 then get cpus num\n  startServerTimeout: 3000, //before start server time\n  reloadSignal: 'SIGUSR2', //reload process signal\n  onUnhandledRejection: '', //unhandledRejection handle\n  onUncaughtException: '', //uncaughtException handle\n  processKillTimeout: 10 * 1000 //process kill timeout\n}","extend.js.file":"module.exports = [];","locales.dir":{},"zh-CN.js.file":"var a = 0;","middleware.js.file":"module.exports = [];"}